@page "{currentpage=1}/{sort?}/{sortDirection?}"
@using ModelLibrary.Models.Shared;
@model FrontEnd.Pages.Data.Fabric.Fabric.IndexModel

@{
	ViewData["Title"] = "Index";
	var currentSortProperty = Model.Sort;
	var currentSortDirection = Model.SortDirection;
	var columnHeaders = new List<TableHeaderModel>
	{
		new TableHeaderModel("FabricType.Type", "Fabric Type", currentSortProperty, currentSortDirection, false),
		new TableHeaderModel("FabricBrand.FullName", "Fabric Brand", currentSortProperty, currentSortDirection, false),
		new TableHeaderModel("Appearance", "Appearance", currentSortProperty, currentSortDirection, false),
		new TableHeaderModel("SolidOrPrint", "Print", currentSortProperty, currentSortDirection, true),
		new TableHeaderModel("Amount", "Amount", currentSortProperty, currentSortDirection, false),
		new TableHeaderModel("Value", "Value", currentSortProperty, currentSortDirection, true),
		new TableHeaderModel("PurchasePrice", "Purchase Price", currentSortProperty, currentSortDirection, true)
	};
}

@if (Model.Items.Count != 0)
{
	<div class="d-flex justify-content-between align-items-center">
		<h1>Fabrics</h1>
		<partial name="_PageSizeDropdown" model="Model" />
	</div>
	<br />
	<div class="d-flex justify-content-between align-items-center">
		<h4>
			<a asp-page="Create">Add New Fabric</a>
		</h4>
		<partial name="_TableCardButtons" model="Model" />
	</div>
	<br />

	<div id="cardView" style="display: none;">
		<link rel="stylesheet" type="text/css" href="~/css/sortBar.css" asp-append-version="true" />
		<div id="sortBar">
			@foreach (var column in columnHeaders)
			{
				<partial name="_SortBar" model="column" />
			}
		</div>
		<link rel="stylesheet" type="text/css" href="~/css/dataCard.css" asp-append-version="true" />
		@foreach (var item in Model.Items)
		{
			var expandableData = new List<KeyValuePair<string, string>>
	{
	new KeyValuePair<string, string>("Fabric Brand", item.FabricBrand.FullName),
	new KeyValuePair<string, string>("Amount in Yards", item.Amount.ToString()),
	new KeyValuePair<string, string>("Purchase Price", $"${item.PurchasePrice.ToString()} / Yard"),
	new KeyValuePair<string, string>("Value", $"${item.Value.ToString()} / Yard"),
	new KeyValuePair<string, string>("Appearance", item.Appearance)
	};

			var bottomText = new List<string>
	{
	item.SolidOrPrint ? "#0dcaf0" : "#fd7e14",	//First line is color options for the footer background
	item.SolidOrPrint ? "Print" : "Solid"		//Further on is more data
	};

			var backgroundColor = Model.GetBackgroundColor(item.FabricType.Type);

			var cardModel = new BaseDataCard
					{
						ID = item.ID,
						MainText = item.FabricType.Type,
						FirstLetter = item.FabricType.Type[0],
						ExpandableData = expandableData,
						BackgroundColor = backgroundColor,
						BottomText = bottomText
					};

			<partial name="_DataCard" model="cardModel" />
			<script src="~/js/cardSize.js" asp-append-version="true"></script>
		}
	</div>

	<div id="tableView" style="display: none;">
		<table class="table table-colors">
			<thead>
				<tr>
					@foreach (var column in columnHeaders)
					{
						<partial name="_SortableHeader" model="column" />
					}
					<th></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model.Items)
				{
					<tr class="table-row-clickable" data-href='@Url.Page("./Details", new {id = item.ID})'>
						<td>
							@Html.DisplayFor(modelItem => item.FabricType.Type)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.FabricBrand.FullName)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Appearance)
						</td>
						<td class="hide-on-mobile">
							@if (item.SolidOrPrint)
							{
								<i class="fa-solid fa-square-check fa-lg" style="color: black;"></i>
							}
							else
							{
								<i class="fa-regular fa-square fa-lg" style="color: black;"></i>
							}
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Amount) Yards
						</td>
						<td class="hide-on-mobile">
							$@Html.DisplayFor(modelItem => item.Value) / Yard
						</td>
						<td class="hide-on-mobile">
							$@Html.DisplayFor(modelItem => item.PurchasePrice) / Yard
						</td>
						<td class="text-right">
							<partial name="_IndexActionPartial" model="@item.ID" />
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
	<div>
		<partial name="_Pagination" model="Model" />
	</div>
}
else
{
	<h1>Fabrics</h1>
	<h5>It looks like your shelf is empty! Let's start by <a asp-page="./Create">adding to it</a>.</h5>
}