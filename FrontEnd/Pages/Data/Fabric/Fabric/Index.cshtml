@page "{currentpage=1}/{sort?}/{sortDirection?}"
@using ModelLibrary.Models.Shared;
@model FrontEnd.Pages.Data.Fabric.Fabric.IndexModel

@{
	ViewData["Title"] = "Index";
	var currentSortProperty = Model.Sort;
	var currentSortDirection = Model.SortDirection;
	var columns = new List<TableHeaderModel>
	{
		new TableHeaderModel("FabricType.Type", "Fabric Type", currentSortProperty, currentSortDirection, false),
		new TableHeaderModel("FabricBrand.FullName", "Fabric Brand", currentSortProperty, currentSortDirection, false),
		new TableHeaderModel("Appearance", "Appearance", currentSortProperty, currentSortDirection, false),
		new TableHeaderModel("SolidOrPrint", "Print", currentSortProperty, currentSortDirection, true),
		new TableHeaderModel("Amount", "Amount", currentSortProperty, currentSortDirection, false),
		new TableHeaderModel("Value", "Value", currentSortProperty, currentSortDirection, true),
		new TableHeaderModel("PurchasePrice", "Purchase Price", currentSortProperty, currentSortDirection, true)
	};
}

<h1>Fabrics</h1>

@if (Model.Items.Count != 0)
{
	<div class="d-flex justify-content-between align-items-center">
		<h4>
			<a asp-page="Create">Add New Fabric</a>
		</h4>
		<partial name="_PageSizeDropdown" model="Model" />
	</div>
	<table class="table table-colors">
		<thead>
			<tr>
				@foreach(var column in columns)
				{
					<partial name="_SortableHeader" model="column" />
				}
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model.Items)
			{
				<tr class="table-row-clickable" data-href='@Url.Page("./Details", new {id = item.ID})'>
					<td>
						@Html.DisplayFor(modelItem => item.FabricType.Type)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.FabricBrand.FullName)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Appearance)
					</td>
					<td class="hide-on-mobile">
						@Html.DisplayFor(modelItem => item.SolidOrPrint)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Amount) Yards
					</td>
					<td class="hide-on-mobile">
						$@Html.DisplayFor(modelItem => item.Value) / Yard
					</td>
					<td class="hide-on-mobile">
						$@Html.DisplayFor(modelItem => item.PurchasePrice) / Yard
					</td>
					<td>
						<a asp-page="./Edit" asp-route-id="@item.ID" class="btn btn-primary btn-sm hide-on-mobile" title="Edit"><i class="fas fa-edit"></i></a>
						<a asp-page="./Details" asp-route-id="@item.ID" class="btn btn-info btn-sm hide-on-mobile" title="Details"><i class="fas fa-info-circle text-white"></i></a>
						<a asp-page="./Delete" asp-route-id="@item.ID" class="btn btn-danger btn-sm hide-on-mobile" title="Delete"><i class="fas fa-trash-alt"></i></a>
					</td>
				</tr>
			}
		</tbody>
	</table>
	<div>
		<partial name="_Pagination" model="Model" />
	</div>
}
else
{
	<h5>It looks like your shelf is empty! Let's start by <a asp-page="./Create">adding to it</a>.</h5>
}