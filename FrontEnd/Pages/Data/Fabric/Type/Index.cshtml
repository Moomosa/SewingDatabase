@page "{currentpage=1}/{sort?}/{sortDirection?}"
@using ModelLibrary.Models.Shared;
@model FrontEnd.Pages.Data.Fabric.Type.IndexModel

@{
	ViewData["Title"] = "Index";
	var currentSortProperty = Model.Sort;
	var currentSortDirection = Model.SortDirection;
	var columns = new List<TableHeaderModel>
	{
		new TableHeaderModel("Type", "Type", currentSortProperty, currentSortDirection, false),
		new TableHeaderModel("Content", "Content", currentSortProperty, currentSortDirection, false)
	};
}

<h1>Fabric Types</h1>

@if (Model.Items.Count != 0)
{
	<div class="d-flex justify-content-between align-items-center">
		<h4>
			<a asp-page="Create">Add New Type</a>
		</h4>
		<partial name="_PageSizeDropdown" model="Model" />
	</div>
	<table class="table table-colors">
		<thead>
			<tr>
				@foreach (var column in columns)
				{
					<partial name="_SortableHeader" model="column" />
				}
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model.Items)
			{
				<tr class="table-row-clickable" data-href='@Url.Page("./Details", new {id = item.ID})'>
					<td>
						@Html.DisplayFor(modelItem => item.Type)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Content)
					</td>
					<td>
						<partial name="_IndexActionPartial" model="@item.ID" />
					</td>
				</tr>
			}
		</tbody>
	</table>
	<div>
		@await Html.PartialAsync("_Pagination", Model)
	</div>
}
else
{
	<h5>What kind of fabric bases do you use? Let's add them <a asp-page="./Create">here</a>.</h5>
}